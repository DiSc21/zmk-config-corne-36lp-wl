parse_config:
  assign_combos_to_layers: false
  preprocess: true
  mark_alternate_layer_activators: true
  skip_binding_parsing: false
  zmk_keycode_map:
    AMPERSAND: '&'
    AMPS: '&'
    APOS: .
    APOSTROPHE: <
    ASTERISK: '*'
    ASTRK: '*'
    AT: '@'
    AT_SIGN: '@'
    BACKSLASH: '\'
    BSLH: \
    BSPC: ✂️
    CARET: ^
    COLON: ':'
    COMMA: ','
    DEL: 🗑️
    DLLR: $
    DOLLAR: $
    DOT: '.'
    DOUBLE_QUOTES: '"'
    DQT: '"'
    END: 🏁
    EQUAL: '='
    ESC: ☢️
    ESCAPE: ☢️
    EXCL: '!'
    EXCLAMATION: '!'
    FSLH: /
    GRAVE: '`'
    GREATER_THAN: '>'
    GT: '>'
    HASH: '#'
    HOME: 🏡
    INS: 📥
    INSERT: 📥
    LBKT: '['
    LBRC: '{'
    LEFT_BRACE: '{'
    LEFT_BRACKET: '['
    LEFT_PARENTHESIS: (
    LESS_THAN: <
    LCTRL: 🕹️
    LALT: ☯︎
    LGUI: 🐧
    LSHFT: ⏏
    LSHIFT: ⏏
    LEFT_CONTROL: 🕹️
    LEFT_ALT: ☯︎
    LEFT_GUI: 🐧
    LEFT_SHFT: ⏏
    LPAR: (
    LT: <
    MINUS: '-'
    NON_US_BACKSLASH: \
    NON_US_BSLH: '|'
    NON_US_HASH: '#'
    NUHS: '#'
    PERCENT: '%'
    PERIOD: .
    PG_DN: 📜🢃
    PG_UP: 📜🢁
    PIPE: '|'
    PIPE2: '|'
    PLUS: +
    POUND: '#'
    PRCNT: '%'
    PSCRN: 📸
    QMARK: '?'
    QUESTION: '?'
    RBKT: ']'
    RBRC: '}'
    RET: ╰┈➤
    RETURN: ╰┈➤
    RIGHT_BRACE: '}'
    RIGHT_BRACKET: ']'
    RIGHT_PARENTHESIS: )
    RPAR: )
    SEMI: ';'
    SEMICOLON:  ';'
    SINGLE_QUOTE: ''''
    SLASH: '/'
    SPACE: "🪐"
    SQT: ''''
    STAR: '*'
    TAB: 🔮
    TILDE: '~'
    TILDE2: '~'
    UNDER: _
    UNDERSCORE: _
    RCTRL: 🕹️
    RALT:  ☯︎
    RGUI: 🐧
    RSHFT: ⏏
    RSHIFT: ⏏
    RIGHT_CONTROL: 🕹️
    RIGHT_ALT: ☯︎
    RIGHT_GUI: 🐧
    RIGHT_SHFT: ⏏
    LEFT: 🡄
    RIGHT: 🡆
    UP: 🡅
    DOWN: 🡇
    C_REWIND: '⏮'
    C_FAST_FORWARD: '⏭'
    C_PAUSE: '⏯'
    C_MUTE: "VOL\nMUTE"
    C_VOLUME_DOWN: "VOL\nDOWN"
    C_VOLUME_UP: "VOL\nUP"
    C_BRIGHTNESS_DEC: '☀↓'
    C_BRIGHTNESS_INC: '☀↑'
    LA(LEFT): ↞
    LA(RIGHT): ↠
    LG(LEFT): ⇤
    LG(RIGHT): ⇥
    'LS(LC(LG(LALT)))': 'HYPER'
    'RS(RC(RG(RALT)))': 'HYPER'
    'LC(LG(LALT))': 'MEH'
    'RC(RG(RALT))': 'MEH'
    'LG(Q)': '⌘Q'
    'LG(W)': '⌘W'
    'LG(GRAVE)': '⌘`'
    'LG(Z)': '⌘Z'
    'LG(X)': '⌘X'
    'LG(C)': '⌘C'
    'LG(V)': '⌘V'
    'LC(TAB)': '⌃↹'
    'LS(LC(TAB))': '⌃⇧↹'
  raw_binding_map:
    '&none': ''
    '&trans': ''
    '&to L_DEF': ''

    # ctrl-tabdance
    '&td_ctrl_dot':
      tap: "💃."
    '&td_test':
      tap: ".💃"

    # Mouse emo
    '&msc SCRL_LEFT':
      tap: 🖱️🢀
    '&msc SCRL_RIGHT':
      tap: 🖱️🢂
    '&msc SCRL_DOWN':
      tap: 🖱️🢃
    '&msc SCRL_UP':
      tap: 🖱️🢁

    '&mkp LCLK':
      tap: 🖱️L
    '&mkp MCLK':
      tap: 🖱️M
    '&mkp RCLK':
      tap: 🖱️R

    '&mmv MOVE_LEFT':
      tap: 🖱️🡄
    '&mmv MOVE_RIGHT':
      tap: 🖱️🡆
    '&mmv MOVE_UP':
      tap: 🖱️🡅
    '&mmv MOVE_DOWN':
      tap: 🖱️🡇

    # LED macros
    '&led_red 3': 'NAV'
    '&led_blue 2': 'SIGNS'
    '&led_purple 1': 'NUM'

    # LED keys
    '&rgb_ug RGB_TOG':
      tap: 💡
    '&rgb_ug RGB_EFR':
      tap: 💡
      hold: ⏮
    '&rgb_ug RGB_EFF':
      tap: 💡
      hold: ⏭
    '&rgb_ug RGB_SPD':
      tap: 💡
      hold: 🐢
    '&rgb_ug RGB_SPI':
      tap: 💡
      hold: 🏎️
    '&rgb_ug RGB_HUI':
      tap: 🎨
      hold: ➕
    '&rgb_ug RGB_HUD':
      tap: 🎨
      hold: ➖
    '&rgb_ug RGB_SAI':
      tap: 🌈
      hold: ➕
    '&rgb_ug RGB_SAD':
      tap: 🌈
      hold: ➖
    '&rgb_ug RGB_BRI':
      tap: 🌗
      hold: ➕
    '&rgb_ug RGB_BRD':
      tap: 🌗
      hold: ➖


    # Bluetooth 𝟎𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗
    "&bt BT_CLR":
      tap: 📡
      shifted: 🗑️
    "&bt BT_SEL 0":
      tap: 📡
      shifted: 𝟎
    "&bt BT_SEL 1":
      tap: 📡
      shifted: 𝟏
    "&bt BT_SEL 2":
      tap: 📡
      shifted: 𝟐
    "&bt BT_SEL 3":
      tap: 📡
      shifted: 𝟑
    "&bt BT_SEL 4":
      tap: 📡
      shifted: 𝟒
    "&bt BT_SEL 5":
      tap: 📡
      shifted: 𝟓

  zmk_combos:
    combo_sticky_bt_led: {'k': 📌LED}
    combo_to_default: {'k': 🌐}
    combo_to_numbers: {'k': 🔘🔢}
    combo_to_navigation: {'k': 🔘🧭}
    combo_caps_word: {'k': 🚩⏏}
