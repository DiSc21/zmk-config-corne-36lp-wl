/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// #include <dt-bindings/zmk/pointing.h>

/* TOP LEFT hand keys */
#define LT0 0
#define LT1 1
#define LT2 2
#define LT3 3
#define LT4 4
#define LT5 5
/* TOP RIGHT hand keys */
#define RT0 6
#define RT1 7
#define RT2 8
#define RT3 9
#define RT4 10
#define RT5 11

/* MID LEFT hand keys */
#define LM0 12
#define LM1 13
#define LM2 14
#define LM3 15
#define LM4 16
#define LM5 17
/* MID RIGHT hand keys */
#define RM0 18
#define RM1 19
#define RM2 20
#define RM3 21
#define RM4 22
#define RM5 23

/* MID LEFT hand keys */
#define LB0 24
#define LB1 25
#define LB2 26
#define LB3 27
#define LB4 28
#define LB5 29
/* MID RIGHT hand keys */
#define RB0 30
#define RB1 31
#define RB2 32
#define RB3 33
#define RB4 34
#define RB5 35

/* THUMBS LEFT */
#define LH2 36
#define LH1 37
#define LH0 38
/* THUMBS RIGHT */
#define RH0 39
#define RH1 40
#define RH2 41

// left-hand keys
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
// right-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
// thumb keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

/* Layer defs */
#define L_DEF 0
#define L_NUM 1
#define L_BRC 2
#define L_NAV 3

#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150

/ {
    behaviors {

        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.
        //
        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };


        // Positional Homerow mods for shift
        // Use faster tapping term and disable some features that may
        // cause false negatives.
        hm_shift_l: hm_shift_l {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            // hold-trigger-on-release;
        };
        hm_shift_r: hm_shift_r {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM_FAST>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            // hold-trigger-on-release;
        };

        // Non-Positional Homerow Mods
        // Used for &mm_grescm_gui behavior on left hand.
        //
        // Usage: &hm LSHFT T
        // Tap: T
        // Tap-Tap-Hold: Repeat T
        // Hold: LSHIFT
        hm_np: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <200>;
        };

        // STD ZMK DOC Homerow Mods
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        pht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1>;    // <---[[the W key]]
        };
    };

        keymap {
                compatible = "zmk,keymap";

// The Base Layer
// -----------------------------------------------------------------------------------------------------------------------------------------------------
// | - |  Q         |  W        | E          | R         || T         | |   -   | | Y         || U          | I           | O         | P           | - |
// |---|------------|-----------|------------|-----------||-----------| |   -   | |-----------||------------|-------------|-----------|-------------|---|
// | - |  A [SHIFT] |  S [CTRL] | D [WIN]    | F [ALT]   || G         | |   -   | | H         || J [ALT]    | K [WIN]     | L [CTRL]  | ;/: [SHIFT] | - |
// |---|------------|-----------|------------|-----------||-----------| |   -   | |-----------||------------|-------------|-----------|-------------|---|
// | - |  Z         |  X        | C [FUNC]   | V [BRACE] || B [BTL]   | |   -   | | N [BTL]   || M [BRACE]  | ,/< [FUNC]  | ./>       | //?         | - |
// -----------------------------|------------|-----------||-----------| |   -   | |-----------||------------|-------------|------------------------------
//                              | BSPC [NAV] | RET [BRC] || TAB [NUM] | |   -   | | ESC [NUM] || SPC [BRC]  | ENTF [NAV]   |
//                              ------------------------------------------------------------------------------------------
                default_layer {
                        bindings = <
   &kp MINUS &kp Q                &kp W         &kp E          &kp R         &kp T             &kp Y         &kp U           &kp I         &kp O         &kp P                   &kp MINUS
   &kp MINUS &hm_shift_l LSHIFT A &hm_l LCTRL S &hm_l LGUI D   &hm_l LALT F  &kp G             &kp H         &hm_r RALT J    &hm_r RGUI K  &hm_r RCTRL L &hm_shift_r RSHIFT SEMI &kp MINUS
   &kp MINUS &kp Z                &kp X         &lt 4 C        &lt 5 V       &lt 6 B           &lt 6 N       &lt 5 M         &lt 4 COMMA   &kp DOT       &kp FSLH                &kp MINUS
                                                &lt L_BRC BSPC &lt L_NUM RET &lt L_DEF TAB     &lt L_DEF ESC &lt L_NUM SPACE &lt L_BRC DEL
                        >;
                };

// [NUM] LAYER
// -----------------------------------------------------------------------------------------------------------------------------------------
// | - | F1         | F2        | F3       | F4       || Euler   |  |    -    |  | +       || 7       | 8       | 9        | *         | - |
// |---|------------|-----------|----------|----------||---------|  |    -    |  |---------||---------|---------|----------|-----------|---|
// | - | F5 [SHIFT] | F6 [CTRL] | F7 [WIN] | F8 [ALT] || PI      |  |    -    |  | -       || 4 [ALT] | 5 [WIN] | 6 [CTRL] | = [SHIFT] | - |
// |---|------------|-----------|----------|----------||---------|  |    -    |  |---------||---------|---------|----------|-----------|---|
// | - | F9         | F10       | F11      | F12      || Sqrt2   |  |    -    |  | 0       || 1       | 2       | 3        | .         | - |
// -----------------------------|----------|----------||---------|  |    -    |  |---------||---------|---------|---------------------------
//                              | BSPC     | RET      || **TAB** |  |    -    |  | **ESC** || SPC     | ENTF    |
//                              ---------------------------------------------------------------------------------
                numbers {
                        bindings = <
   &kp MINUS &kp F1                &kp F2         &kp   F3      &kp F4        &trans         &kp PLUS  &kp N7        &kp N8        &kp N9         &kp ASTERISK             &kp MINUS
   &kp MINUS &hm_shift_l LSHIFT F5 &hm_l LCTRL F6 &hm_l LGUI F7 &hm_l LALT F8 &trans         &kp MINUS &hm_r RALT N4 &hm_r RGUI N5 &hm_r RCTRL N6 &hm_shift_r RSHIFT EQUAL &kp MINUS
   &kp MINUS &kp F9                &kp F10        &kp   F11     &kp F12       &kp HOME       &kp N0    &kp N1        &kp N2        &kp N3         &kp DOT                  &kp MINUS
                                                  &kp   BSPC    &kp RET       &trans         &trans    &kp SPACE     &kp DEL
                        >;
                };

// [BRC] LAYER (BRACES/SIGNS)
// -----------------------------------------------------------------------------------------------------------------------------------------
// | - | !         | @        | #       | $         | %         ||   |    -    |   | ^    || &       | *       | (         | )         | - |
// |---|-----------|----------|---------|-----------|-----------||   |    -    |   |------||---------|---------|-----------|-----------|---|
// | - | ~ [SHIFT] | ` [CTRL] |   [WIN] |     [ALT] | P-UP      ||   |    -    |   | -/_  || { [ALT] | [ [WIN] | ] [CTRL]  | } [SHIFT] | - |
// |---|-----------|----------|---------|-----------|-----------||   |    -    |   |------||---------|---------|-----------|-----------|---|
// | - | HOME      | INSERT   | PRINT   | END       | P-DOWN    ||   |    -    |   | '/"  || \/|     | <       | >         | //?       | - |
// ---------------------------|---------|-----------|-----------||   |    -    |   |------||---------|---------|----------------------------
//                            | BSPC    | **RET**   | TAB       ||   |    -    |   | ESC  || **SPC** | ENTF    |
//                            ----------------------------------------------------------------------------------
                signs_braces {
                        bindings = <
   &kp MINUS &kp EXCL                 &kp AT            &kp HASH  &kp DOLLAR &kp PRCNT       &kp CARET        &kp AMPS        &kp ASTERISK    &kp LPAR         &kp RPAR                &kp MINUS
   &kp MINUS &hm_shift_l LSHIFT TILDE &hm_l LCTRL GRAVE &trans    &trans     &kp PG_UP       &kp MINUS        &hm_r RALT LBRC &hm_r RGUI LBKT &hm_r RCTRL RBKT &hm_shift_r RSHIFT RBRC &kp MINUS
   &kp MINUS &kp HOME                 &kp INSERT        &kp PSCRN &kp END    &kp PG_DN       &kp SINGLE_QUOTE &kp BSLH        &kp LT          &kp GT           &kp FSLH                &kp MINUS
                                                        &kp BSPC  &trans     &kp TAB         &kp ESC          &trans          &kp DEL
                        >;
                };
// [NAV] LAYER
// --------------------------------------------------------------------------------------------------------------------------------------------------
// | - |            |           |          |          ||         |  |    -    |  | M-LEFT   || SNIPER-    | M-MIDDLE   | SNIPER+    | M-RIGHT    | - |
// |---|------------|-----------|----------|----------||---------|  |    -    |  |----------||------------|------------|------------|------------|---|
// | - |    [SHIFT] | M2 [CTRL] | M3 [WIN] | M1 [ALT] || M-DBL   |  |    -    |  | <-       || DOWN       | UP         | ->         | P-UP       | - |
// |---|------------|-----------|----------|----------||---------|  |    -    |  |----------||------------|------------|------------|------------|---|
// | - |            |           |          |          ||         |  |    -    |  | <-MOUSE  || M-DOWN     | M-UP       | ->MOUSE    | P-DOWN     | - |
// -----------------------------|----------|----------||---------|  |    -    |  |----------||------------|------------|------------------------------
//                              | **BSPC** | RET      || TAB     |  |    -    |  | ESC      || SPC        | **ENTF**   |
//                              ----------------------------------------------------------------------------------------
                navigation {
                        bindings = <
   &kp MINUS &trans &trans &trans  &trans  &trans        &trans   &trans    &trans  &trans    &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans  &trans        &kp LEFT &kp DOWN  &kp  UP &kp RIGHT &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans  &trans        &trans   &trans    &trans  &trans    &trans &kp MINUS
                           &trans  &kp RET &kp TAB       &kp ESC &kp SPACE &trans
                        >;
                };


                dummy_01 {
                        bindings = <
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
                           &trans  &trans &trans         &trans &trans &trans
                        >;
                };
                dummy_02 {
                        bindings = <
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
                           &trans  &trans &trans         &trans &trans &trans
                        >;
                };
                dummy_03 {
                        bindings = <
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
   &kp MINUS &trans &trans &trans  &trans &trans         &trans &trans &trans  &trans &trans &kp MINUS
                           &trans  &trans &trans         &trans &trans &trans
                        >;
                };

// [BT+L1] LAYER
// ---------------------------------------------------------------------------------------------------------------------------------------------
// | - | BTCLR      |           |          |          |         |  |    -    |  |         |          |            |           |            | - |
// |---|------------|-----------|----------|----------|---------|  |    -    |  |---------|----------|------------|-----------|------------|---|
// | - | B1         | B2        | B3       | B4       | B5      |  |    -    |  |         |    [ALT] |      [WIN] |    [CTRL] |    [SHIFT] | - |
// |---|------------|-----------|----------|----------|---------|  |    -    |  |---------|----------|------------|-----------|------------|---|
// | - | L1         | L2        | L3       | L4       | L5      |  |    -    |  | ******* |          |            |           |            | - |
// -----------------------------|----------|----------|---------|  |    -    |  |---------|----------|------------|-----------------------------
//                              | ESC      | RET      | TAB     |  |    -    |  | SPC     | BSPC     | ENTF       |
//                              -----------------------------------------------------------------------------------


//   //// -----------------------------------------------------------------------------------------
//   //// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
//   //// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
//   //// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//   ////                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
//   //                old_default {
//   //                        bindings = <
//   //   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
//   //   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
//   //   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
//   //                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
//   //                        >;
//   //                };
//
//                   lower_layer {
//   // -----------------------------------------------------------------------------------------
//   // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
//   // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
//   // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//   //                    | GUI |     | SPC |   | ENT |     | ALT |
//                           bindings = <
//      &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
//      &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
//      &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
//                                       &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
//                           >;
//                   };
//
//   //                raise_layer {
//   //// -----------------------------------------------------------------------------------------
//   //// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
//   //// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
//   //// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//   ////                    | GUI |     | SPC |   | ENT |     | ALT |
//   //                        bindings = <
//   //   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
//   //   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
//   //   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
//   //                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
//   //                        >;
//   //                };
//   //

        };
};

// -------------------------------------------------------------------------------------------------------------------------------------
// [L1] ARROWS LAYER
// [NUM] RGB LED LAYER
// [BRACE] BRACE/SIGNS LAYER
// [BTL] BLUETOOTH LAYER
//------------------------
// [L2] SYBEL LAYER

